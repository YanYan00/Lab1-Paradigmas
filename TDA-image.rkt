#lang racket
(require "bitmap.rkt")
(require "pixmap.rkt")
(require "hexmap.rkt")
(define(lista-coordenadas x y v z lista)
  (if(= x v)
     (reverse lista)
  (if(= y z)
     (lista-coordenadas x y (+ v 1) 0 lista)
   (lista-coordenadas x y v (+ z 1) (cons (list v z) lista)))))
;
(define(orden-datos x lista)
  (if(null? x)
     (reverse lista)
   (orden-datos (cdr x) (cons (list (car(car x)) (car(cdr(car x)))) lista))))
;
(define (TDAimage alto ancho . datos)
  (if (and (integer? alto)(integer? ancho)(>= alto 0)(>= ancho 0)(=(* alto ancho)(length datos))
      (equal? (lista-coordenadas alto ancho 0 0 null) (orden-datos datos null)))
  (list alto ancho datos)
  (print "ingresa los datos correctamente")))

(define hola(TDAimage 2 2 (pixbit-d  0 0 0 10) (pixbit-d  0 1 0 20) (pixbit-d 1 0 0 30) (pixbit-d 1 1 1 4)))
(define holaa(TDAimage 2 2 (pixrgb-d  0 0 255 10 10 10) (pixrgb-d  0 1 20 20 20 20) (pixrgb-d 1 0 30 30 30 30) (pixrgb-d 1 1 40 40 40 40)))
(define holaaa(TDAimage 2 2 (pixhex-d  0 0 "a" 10) (pixhex-d  0 1 "a" 20) (pixhex-d 1 0 "a" 30) (pixhex-d 1 1 "a" 4)))